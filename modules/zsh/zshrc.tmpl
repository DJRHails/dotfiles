# shortcut to this dotfiles path is $ZSH
if [[ -z $DOTFILES ]]
then
  export DOTFILES=DOTFILES_
fi
export ZSH=DOTFILES_
export ZPLUG_HOME=~/.zplug

# Stash any private elements in ~/.zshrc.local. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.zshrc.local ]]
then
  source ~/.zshrc.local
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Shell functions, freload unsets functions
freload() { while (( $# )); do; unfunction $1 2> /dev/null; autoload -Uz $1; shift; done }

# Autoload all shell functions from all directories in $fpath (following
# symlinks) that have:
# - Are a file (N = not directory)
# - The executable bit on
# The executable bit is not necessary, but gives you an easy way to stop the autoloading of a particular shell function.
# $fpath should not be empty for this to work.
freload $^fpath/*(N-.x:t)

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# If fzf is installed, you should source that too
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export FZF_COMPLETION_TRIGGER='~~'

# Add bin to path
export PATH=${PATH:+$PATH:}${DOTFILES}/bin